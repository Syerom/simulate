<ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>
>>>>>>>>>>>>>>>> []
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10331ebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103747090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103747490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103747790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037479d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103747d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103750090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103750490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103750a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103750b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103750f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375b890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10375bb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037626d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037629d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103762fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376a310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376a790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376a8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376aa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376abd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10376acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037715d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037716d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103771f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037784d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103778f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037800d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103780250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037803d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103780550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037808d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103780c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103780c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103780e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103788fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10378e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10378e8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10378ea10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10378ee90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10378efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::AttributeValue&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::AttributeValue&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103798110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037985d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103798750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103798b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103798e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10379f150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10379f310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10379f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10379fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10379ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037a7150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037a7590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037a7a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037a7b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037a7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b01d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b0310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b0490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b0890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b0a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b0b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b6090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b64d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b6910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037b6d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c1350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c1810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name &' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c1c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c1dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c8310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c8510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c8a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037c8e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037cf350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037cf810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037cff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037d8d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e0250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Data&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Data&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e09d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::L3Protocol>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::L3Protocol>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::L3Protocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e8350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Object>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Object>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1036552d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::nfd::Forwarder>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::nfd::Forwarder>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e8910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037e8e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Fib&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Fib&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037f1310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Pit&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Pit&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037f1810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Cs&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Cs&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037f1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037fa250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037fa710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037fa910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037faa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1037faf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038010d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103801590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038016d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103801b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHopList&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHopList&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038090d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103809590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103809a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103809e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103812390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038124d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038128d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103812d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHop&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHop&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10381a1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10381a3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::pit::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::pit::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10381a890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10381aa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10381af90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1038224d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::cs::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::cs::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103822990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x103822b90>))
